/**
 * Copyright 2021 Bonitasoft S.A.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import type { MessageDetails } from '../parsing-messages';
import { JsonParsingWarning } from '../parsing-messages';
import type { ShapeBpmnElementKind } from '../../../model/bpmn/internal';
export declare class GroupUnknownCategoryValueWarning extends JsonParsingWarning {
    readonly groupBpmnElementId: string;
    readonly categoryValueRef: string;
    constructor(groupBpmnElementId: string, categoryValueRef: string);
    getMessage(): {
        template: string;
        arguments: Array<string>;
    };
}
export declare class ShapeUnknownBpmnElementWarning extends JsonParsingWarning {
    readonly bpmnElementId: string;
    constructor(bpmnElementId: string);
    getMessage(): {
        template: string;
        arguments: Array<string>;
    };
}
export declare class EdgeUnknownBpmnElementWarning extends JsonParsingWarning {
    readonly bpmnElementId: string;
    constructor(bpmnElementId: string);
    getMessage(): {
        template: string;
        arguments: Array<string>;
    };
}
export declare class LabelStyleMissingFontWarning extends JsonParsingWarning {
    readonly shapeOrEdgeId: string;
    readonly labelStyleId: string;
    constructor(shapeOrEdgeId: string, labelStyleId: string);
    getMessage(): {
        template: string;
        arguments: Array<string>;
    };
}
export declare class LaneUnknownFlowNodeRefWarning extends JsonParsingWarning {
    readonly laneId: string;
    readonly flowNodeRef: string;
    constructor(laneId: string, flowNodeRef: string);
    getMessage(): MessageDetails;
}
export declare class BoundaryEventNotAttachedToActivityWarning extends JsonParsingWarning {
    readonly bpmnElementId: string;
    readonly attachedToRef: string;
    readonly attachedToKind: ShapeBpmnElementKind;
    constructor(bpmnElementId: string, attachedToRef: string, attachedToKind: ShapeBpmnElementKind);
    getMessage(): MessageDetails;
}
